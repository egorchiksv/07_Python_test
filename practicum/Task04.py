# Рекурсивное вычисление общей стоимости товаров в корзине
# Контекст: Вы работаете над системой для интернет-магазине. Клиенты добавляют товары в корзину, каждый из которых представлен в виде словаря с ключами 'название' и 'цена'.
# Ваша задача - написать рекурсивную функцию, которая вычисляет общую стоимость всех товаров в корзине.
# Задание: Напишите функцию total_cart_cost(cart_items), где cart_items - это список словарей, каждый из которых содержит информацию о товаре. Функция должна возвращать
# общую стоимоть всех товаров в корзине, используя рекурсию.
# Допускается только операции +1 и -1.

# Пример вызова функции с маленьким списком
cart_items = [
    {"название": "Телефон", "цена": 200},
    {"название": "Наушники", "цена": 50},
    {"название": "Чехол", "цена": 20}]

def total_cart_cost(cart_items):
    # Вспомогательная функция для рекурсивного добавления цены товара
    def add_price(total, price):
        if price == 0:
            return total
        else:
            return add_price(total + 1, price - 1)
    # Проверка, не пуст ли список
    if not cart_items:
        return 0

    # Вычисляем стоимость первого товара в списке
    first_item_cost = add_price(0, cart_items[0]["цена"])

    # Рекурсивно вызываем функцию для оставшейся части списка
    return first_item_cost + total_cart_cost(cart_items[1:])

# Пример вызова функции с маленьким списком
small_cart = [
    {"название": "Телефон", "цена": 200},
    {"название": "Наушники", "цена": 50},
    {"название": "Чехол", "цена": 20}
]
print(total_cart_cost(small_cart)) # Ожидается результат 270

# Функция удаления записи в файле
def delete_data(data):
display_data(data)
index = int(input("Введите номер записи для удаления: ")) - 1
if index < 0 or index >= len(data):
print("Неверный номер записи.")
return
del data[index]
return data